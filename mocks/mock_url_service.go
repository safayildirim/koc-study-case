// Code generated by MockGen. DO NOT EDIT.
// Source: koc-digital-case/controllers (interfaces: URLService)

// Package mocks is a generated GoMock package.
package mocks

import (
	models "koc-digital-case/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockURLService is a mock of URLService interface.
type MockURLService struct {
	ctrl     *gomock.Controller
	recorder *MockURLServiceMockRecorder
}

// MockURLServiceMockRecorder is the mock recorder for MockURLService.
type MockURLServiceMockRecorder struct {
	mock *MockURLService
}

// NewMockURLService creates a new mock instance.
func NewMockURLService(ctrl *gomock.Controller) *MockURLService {
	mock := &MockURLService{ctrl: ctrl}
	mock.recorder = &MockURLServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLService) EXPECT() *MockURLServiceMockRecorder {
	return m.recorder
}

// DeleteURL mocks base method.
func (m *MockURLService) DeleteURL(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteURL", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteURL indicates an expected call of DeleteURL.
func (mr *MockURLServiceMockRecorder) DeleteURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteURL", reflect.TypeOf((*MockURLService)(nil).DeleteURL), arg0)
}

// GetURLs mocks base method.
func (m *MockURLService) GetURLs() ([]models.URLMapping, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURLs")
	ret0, _ := ret[0].([]models.URLMapping)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURLs indicates an expected call of GetURLs.
func (mr *MockURLServiceMockRecorder) GetURLs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURLs", reflect.TypeOf((*MockURLService)(nil).GetURLs))
}

// RedirectURL mocks base method.
func (m *MockURLService) RedirectURL(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RedirectURL", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RedirectURL indicates an expected call of RedirectURL.
func (mr *MockURLServiceMockRecorder) RedirectURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RedirectURL", reflect.TypeOf((*MockURLService)(nil).RedirectURL), arg0)
}

// ShortenURL mocks base method.
func (m *MockURLService) ShortenURL(arg0 *models.CreateSURLRequest) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShortenURL", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShortenURL indicates an expected call of ShortenURL.
func (mr *MockURLServiceMockRecorder) ShortenURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShortenURL", reflect.TypeOf((*MockURLService)(nil).ShortenURL), arg0)
}
